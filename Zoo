package com.saar;


public class Zoo {

    private String managerName;
    private int predator;
    private int aquatic;
    private Cages[] cages;

    public Zoo(String managerName, int predator, int aquatic) {

        this.managerName = managerName;
        this.predator = predator;
        this.aquatic = aquatic;
        cages = new Cages[predator+aquatic];
    }

    public boolean insertNewAnimal(Animals animal) {
        if (animal.isAquatic()) {
            for (int i = 0; i < aquatic; i++) {

                if (cages[i].getAnimalsInside() == 0) {
                    cages[i].addAnimal(animal);
                    return true;
                } else if (cages[i].getAnimalsInside() > 0 && cages[i].getAnimalsInside() <= cages[i].getMaxCapacity()) {

                    if (cages[i].isAquatic() && cages[i].isPredator()) {
                        cages[i].addAnimal(animal);
                        return true;
                    } else if (cages[i].isAquatic() && !cages[i].isPredator()) {
                        cages[i].addAnimal(animal);
                        return true;
                    }
                }
            }
        }

        else {
            for (int i = aquatic; i < (aquatic+predator); i++) {

                if (cages[i].getAnimalsInside() == 0) {
                    cages[i].addAnimal(animal);
                    return true;
                } else if (cages[i].getAnimalsInside() > 0 && cages[i].getAnimalsInside() <= cages[i].getMaxCapacity()) {

                    if (cages[i].isPredator()) {
                        cages[i].addAnimal(animal);
                        return true;
                    } else if (!cages[i].isPredator()) {
                        cages[i].addAnimal(animal);
                        return true;
                    }
                }
            }
        }
        return false;
    }


}

